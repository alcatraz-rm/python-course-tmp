"""
Правильно, но есть важное замечание (№ 1)

1. В проверке числа на простоту вы ищете делители до квадратного корня из n, но при этом НЕ включаете сам корень.
    Таким образом, ваша программа будет считать некоторые квадраты натуральных чисел простыми (например, 25),
    а это не так.
    В вашей задаче этот нюанс не повлиял, так как вас интересуют только те простые числа, которые кончаются на 7,
    а квадрат натурального числа не может кончаться на 7. Но с границами надо быть аккуратнее, можно посчитать
    некоторые составные числа простыми;
2. Если в начале функции prime вы отдельно проверили число на кратность двум, то в цикле можно не рассматривать четные
    числа в качестве потенциальных делителей, то есть идти с шагом 2: for i in range(3, round(k(n)), 2).
"""


from math import sqrt as k
def prime(n):
    if(n%2==0):
        return 0
    for i in range(3, round(k(n))):
        if(n%i==0):
            return 0
    return 1

ans = 1
for i in range(2532000, 2532160+1):
    v = str(i)
    if(prime(i) and v[-1] == "7"):
        print(ans, i)
        ans +=1
